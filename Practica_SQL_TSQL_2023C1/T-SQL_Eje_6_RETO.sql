/* ==============================================================================
6. Realizar un procedimiento que si en alguna factura se facturaron componentes
que conforman un combo determinado (o sea que juntos componen otro
producto de mayor nivel), en cuyo caso deberá reemplazar las filas
correspondientes a dichos productos por una sola fila con el producto que
componen con la cantidad de dicho producto que corresponda.
*/


-- ESTA FUNCTION DEVUELVE UNA TABLA CON LOS POSIBLES COMBOS QUE SE PUEDEN FORMAR DE UNA DETERMINADA FACTURA
--LA FUNCION AUXILIAR SOLO DEVUELVE LOS COMBOS CUYA DIFERENCIA DE CANTIDADES DE COMPONENTES DA SIEMPRE POSITIVO, SI ALGUNO DA NEGATIVA SE DESCARTA EL COMBO
CREATE FUNCTION FN_AUX_EJE_6_ES_POSIBLE_RECOMPOSICION_COMPLETA_V1(@FACT_ID CHAR(50))
RETURNS @TABLE_PROD_A_RECOMP TABLE (COMBO_COD CHAR(8))
AS
BEGIN
	--EVALUAMOS ITEM X ITEM
	DECLARE @PROD_COD CHAR(8), @PROD_CANT DECIMAL(12,2)
	DECLARE CURSOR_FACTURA_MAIN CURSOR FOR
	SELECT item_producto, item_cantidad FROM Item_Factura WHERE item_tipo+item_sucursal+item_numero = @FACT_ID
	OPEN CURSOR_FACTURA_MAIN
	FETCH NEXT FROM CURSOR_FACTURA_MAIN INTO @PROD_COD, @PROD_CANT
	WHILE @@FETCH_STATUS = 0
	BEGIN
		--PREGUNTO SI ESTE ITEM EN PARTICULAR FORMA PARTE DE ALGUN COMBO
		IF EXISTS (SELECT * FROM Composicion WHERE comp_componente = @PROD_COD)
		BEGIN
			--EVALUAMOS COMBO X COMBO HASTA QUE ENCONTREMOS Q' SE PUEDA FORMAR COMPLETO
			DECLARE @POSIBLE_COMBO_A_EVALUAR CHAR(8)
			DECLARE CURSOR_COMBO CURSOR FOR
			SELECT comp_producto FROM Composicion WHERE comp_componente = @PROD_COD
			OPEN CURSOR_COMBO
			FETCH NEXT FROM CURSOR_COMBO INTO @POSIBLE_COMBO_A_EVALUAR
			WHILE @@FETCH_STATUS = 0
			BEGIN
				--CANTIDAD DE PRODUCTOS QUE LO CONFORMAN
				DECLARE @CANTIDAD_PROD_COMPONEN DECIMAL(12,2) = (SELECT COUNT(*) FROM Composicion WHERE comp_producto = @POSIBLE_COMBO_A_EVALUAR)

				--CANTIDAD DE PRODUCTOS DISPONNIBLES PARA ARMAR DE LA FACTURA
				DECLARE @CANTIDAD_PROD_DISPONIBLES DECIMAL(12,2) = (SELECT COUNT(*) FROM Composicion
																	WHERE comp_producto = @POSIBLE_COMBO_A_EVALUAR
																	AND comp_componente IN (SELECT item_producto FROM Item_Factura
																							WHERE item_tipo+item_sucursal+item_numero = @FACT_ID
																							AND item_cantidad >= comp_cantidad)
																	)
				--PARA SABER SI ESTAN TODOS, TIENE QUE HABER LA MISMA CANTIDAD DE REGISTROS
				IF @CANTIDAD_PROD_COMPONEN = @CANTIDAD_PROD_DISPONIBLES
				BEGIN
					--SI CUNPLE LA IGUALDAD SIGNIFICA QUE ES POSIBLE ARMAR EL COMBO, POR LO TANTO LO CARGO A LA TABLA
					INSERT INTO @TABLE_PROD_A_RECOMP(COMBO_COD)
					VALUES(@POSIBLE_COMBO_A_EVALUAR)
				END
				--SI NO SON IGUALES, SIGNIFICA QUE NO SE PUEDE ARMAR ESE COMBO CON LOS ELEMENTOS DE LA FACTURA
				--POR LO TANTO SE PASA A EVALUAR AL SIGUIENTE COMBO
				FETCH NEXT FROM CURSOR_COMBO INTO @POSIBLE_COMBO_A_EVALUAR
			END
			CLOSE CURSOR_COMBO
			DEALLOCATE CURSOR_COMBO

			--SI NO SE ENCONTRO NINGUN COMBO POSIBLE FORMABLE, PASAMOS A EVALUAR AL SIGUIENTE ITEM
		END
		--SI NO PERTENECE A NINGUN COMBO, PASAMOS A EVALUAR AL SIGUIENTE ITEM
		FETCH NEXT FROM CURSOR_FACTURA_MAIN INTO @PROD_COD, @PROD_CANT
	END
	CLOSE CURSOR_FACTURA_MAIN
	DEALLOCATE CURSOR_FACTURA_MAIN

	RETURN
END
GO




CREATE PROCEDURE PR_EJE_06
AS
BEGIN
	--PRIMERO: Filtramos las facturas que tienen algun item de composicion
	DECLARE @FACT_ID CHAR(50)
	DECLARE CURSOR_FACTURA CURSOR FOR
	SELECT fact_tipo+fact_sucursal+fact_numero
		FROM Factura
		WHERE EXISTS (SELECT * FROM Item_Factura 
						WHERE item_tipo+item_sucursal+item_numero = fact_tipo+fact_sucursal+fact_numero
						AND item_producto IN (SELECT comp_componente FROM Composicion))
	OPEN CURSOR_FACTURA
	FETCH NEXT FROM CURSOR_FACTURA INTO @FACT_ID
	WHILE @@FETCH_STATUS = 0
	BEGIN
		--DE LAS QUE TIENEN COMPOSICION, EVALAUAR SI PUEDEN LLEGAR A COMPLETAR ALGUN COMBO CON LOS DEMAS ITEMS DE SU MISMA FACTURA
		--CADA VES QUE HAYA MODIFICACIÓN POR LA CONSTRUCCION DE UN COMBO, SE VOLVERÁ A PREGUNTAR DEVUELTA SI EXISTE AUN ALGUN OTRO COMBO POR FORMAR
		--ESTO SE REPITE HASTA QUE YA NO HAYAN COMBOS POR FORMAR EN LA FACTURA
		--Se creo una funcion que devuelve una tabla con los posibles combos que se pueden formar de una determinada factura
		WHILE EXISTS (SELECT * FROM DBO.FN_AUX_EJE_6_ES_POSIBLE_RECOMPOSICION_COMPLETA_V1(@FACT_ID))
		BEGIN
			--ASIGNO EL PRIMER COMBO POSIBLE PARA FORMARLO
			DECLARE @PROD_COMBO CHAR(8) = (SELECT TOP 1 COMBO_COD FROM DBO.FN_AUX_EJE_6_ES_POSIBLE_RECOMPOSICION_COMPLETA_V1(@FACT_ID))

			DECLARE @CANT_LIMITANTE INT = (SELECT TOP 1 (SELECT item_cantidad/comp_cantidad FROM Item_Factura
														WHERE item_tipo+item_sucursal+item_numero = @FACT_ID
														AND item_producto = comp_componente)
											FROM Composicion WHERE comp_producto = @PROD_COMBO
											ORDER BY 1 ASC)
			--TENGO FACT
			--TENGO COMBO
			--Exploro los item_factura que son aptos para componer el combo
			DECLARE @COMPONENTE CHAR(8), @CANTIDAD_COMP DECIMAL(12,2), @ITEM_CANTIDAD DECIMAL(12,2), @ITEM_PRECIO DECIMAL(12,2)
			DECLARE CURSOR_COMBO CURSOR FOR
				SELECT comp_componente, comp_cantidad , item_cantidad
				FROM Composicion 
				JOIN Item_Factura ON item_tipo+item_sucursal+item_numero = @FACT_ID 
				AND item_producto = comp_componente
				WHERE comp_producto = @PROD_COMBO
			OPEN CURSOR_COMBO
			FETCH NEXT FROM CURSOR_COMBO INTO @COMPONENTE, @CANTIDAD_COMP, @ITEM_CANTIDAD, @ITEM_PRECIO
			WHILE @@FETCH_STATUS = 0
			BEGIN
				IF (@ITEM_CANTIDAD - @CANT_LIMITANTE*@CANTIDAD_COMP > 0) --SI ES QUE  AUN QUEDAN COMPONENTES
				BEGIN
					UPDATE Item_Factura
					SET item_cantidad = item_cantidad - @CANT_LIMITANTE*@CANTIDAD_COMP
					WHERE item_tipo+item_sucursal+item_numero = @FACT_ID
					AND item_producto = @COMPONENTE
				END
				ELSE --SI ES QUE JUSTO LA DIFERENCIA DA 0, HAY QUE ELIMINAR ESA FILA
				BEGIN
					DELETE FROM Item_Factura
					WHERE item_tipo+item_sucursal+item_numero = @FACT_ID 
					AND item_producto = @COMPONENTE
				END
				--EL CONTROL PARA UNA DIFERENCIA < 0 NO ES NECESARIA, PORQ' ESE CONTROL ESTA EN LA FUNCION AUXILIAR
				--LA FUNCION AUXILIAR SOLO DEVUELVE LOS COMBOS CUYA DIFERENCIA DE COMPONENTES DA SIEMPRE POSITIVO, SI ALGUNO DA NEGATIVA SE DESCARTA EL COMBO

				FETCH NEXT FROM CURSOR_COMBO INTO @COMPONENTE, @CANTIDAD_COMP, @ITEM_CANTIDAD, @ITEM_PRECIO
			END
			--LUEGO DE HACER LAS MODIFICACIONES A LOS COMPONENTES DEL COMBO, SE AGREGA EL COMBO
			INSERT INTO Item_Factura(
				item_tipo,
				item_sucursal,
				item_numero,
				item_producto,
				item_precio,
				item_cantidad
			)
			SELECT
				LEFT(RTRIM(@FACT_ID),1),
				RIGHT(LEFT(RTRIM(@FACT_ID),5),4),
				RIGHT(RTRIM(@FACT_ID),8),
				@PROD_COMBO,
				@ITEM_PRECIO*@CANTIDAD_COMP,
				@CANT_LIMITANTE

			CLOSE CURSOR_COMBO
			DEALLOCATE CURSOR_COMBO
			--HASTA ACÁ SE AGREGÓ UN SOLO COMBO,
			--AHORA, DEPUÉS DE HABER HECHO LAS MIDIFICACIONES SE VUELVE A PREGUNTAR SI EXISTE ALGUN NUEVO COMBO POR FORMAR
		END
		--SI NO SE PUEDE COMPONER ALGUN COMBO EN LA FACTURA, PASAR A LA SIGUIENTE FACTURA
		FETCH NEXT FROM CURSOR_FACTURA INTO @FACT_ID
	END
	CLOSE CURSOR_FACTURA
	DEALLOCATE CURSOR_FACTURA
END
GO

